name: Update Scoop Manifests and README (Python)

on:
  workflow_dispatch: # Allows manual triggering from the Actions tab
  schedule:
    - cron: '30 16 * * *' # Runs daily at 16:30 UTC (approximately 8:00 PM Tehran time)

jobs:
  update_manifests:
    runs-on: windows-latest # Run on a Windows virtual machine

    permissions:
      contents: write # Grant permissions for the GITHUB_TOKEN to commit and push changes

    steps:
      - name: Checkout Repository # Step 1: Check out your repository's code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }} # Using GITHUB_TOKEN for operations like push

      - name: Setup Scoop # Step 2: Install and prepare Scoop
        uses: MinoruSekine/setup-scoop@v1
        # The 'scoop_branch' input is no longer needed/supported for this action

      - name: Add Scoop shims to PATH # Step 2.5: Ensure Scoop command is available
        run: echo "$HOME\scoop\shims" | Add-Content -Path $env:GITHUB_PATH
        shell: pwsh

      - name: Set up Python # Step 3: Install a specific version of Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # Or any other Python 3.x version you prefer

      - name: Install Python dependencies # Step 4: Install Python libraries needed by your script
        run: |
          python -m pip install --upgrade pip
          pip install requests # 'requests' library is used for downloading files in the Python script
        shell: pwsh # Run these commands using PowerShell

      - name: Run Python script to update manifests # Step 5: Execute your Python script
        id: run_update_script 
        env:
          PYTHONIOENCODING: UTF-8 # Ensures Python uses UTF-8 for its standard input/output
          GITHUB_REPOSITORY: ${{ github.repository }} # Makes the repository name available to your script
        run: python update_manifests.py # Assumes your script is in the root of the repository
        shell: pwsh

      - name: Commit and Push Changes # Step 6: Commit and push any changes made by the script
        run: |
          git config --global user.name "GitHub Action Bot"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # Check if there are any changes to commit
          if ! git diff --quiet HEAD; then
            echo "Changes detected, committing and pushing..."
            # Add all .json files in the bucket directory and the README.md
            git add bucket/*.json README.md 
            git commit -m "Automated: Update app manifests and README (Python)"
            git push
          else
            echo "No changes to commit."
          fi
        shell: bash 
